//--------------------------------------------------------------------------------------------------
// <auto-generated>
//
//     This code was generated by code generator tool.
//
//     To customize the code use your own partial class. For more info about how to use and customize
//     the generated code see the documentation at http://docs.kentico.com.
//
// </auto-generated>
//--------------------------------------------------------------------------------------------------

using System;
using System.Collections.Generic;

using CMS;
using CMS.Base;
using CMS.Helpers;
using CMS.DataEngine;
using CMS.DocumentEngine.Types.DotStark;
using CMS.DocumentEngine;

[assembly: RegisterDocumentType(KenticoMvc.CLASS_NAME, typeof(KenticoMvc))]

namespace CMS.DocumentEngine.Types.DotStark
{
	/// <summary>
	/// Represents a content item of type KenticoMvc.
	/// </summary>
	public partial class KenticoMvc : TreeNode
	{
		#region "Constants and variables"

		/// <summary>
		/// The name of the data class.
		/// </summary>
		public const string CLASS_NAME = "DotStark.KenticoMvc";


		/// <summary>
		/// The instance of the class that provides extended API for working with KenticoMvc fields.
		/// </summary>
		private readonly KenticoMvcFields mFields;

		#endregion


		#region "Properties"

		/// <summary>
		/// KenticoID.
		/// </summary>
		[DatabaseIDField]
		public int KenticoID
		{
			get
			{
				return ValidationHelper.GetInteger(GetValue("KenticoID"), 0);
			}
			set
			{
				SetValue("KenticoID", value);
			}
		}


		/// <summary>
		/// Name.
		/// </summary>
		[DatabaseField]
		public string KenticoName
		{
			get
			{
				return ValidationHelper.GetString(GetValue("KenticoName"), @"");
			}
			set
			{
				SetValue("KenticoName", value);
			}
		}


		/// <summary>
		/// Gets an object that provides extended API for working with KenticoMvc fields.
		/// </summary>
		[RegisterProperty]
		public KenticoMvcFields Fields
		{
			get
			{
				return mFields;
			}
		}


		/// <summary>
		/// Provides extended API for working with KenticoMvc fields.
		/// </summary>
		[RegisterAllProperties]
		public partial class KenticoMvcFields : AbstractHierarchicalObject<KenticoMvcFields>
		{
			/// <summary>
			/// The content item of type KenticoMvc that is a target of the extended API.
			/// </summary>
			private readonly KenticoMvc mInstance;


			/// <summary>
			/// Initializes a new instance of the <see cref="KenticoMvcFields" /> class with the specified content item of type KenticoMvc.
			/// </summary>
			/// <param name="instance">The content item of type KenticoMvc that is a target of the extended API.</param>
			public KenticoMvcFields(KenticoMvc instance)
			{
				mInstance = instance;
			}


			/// <summary>
			/// KenticoID.
			/// </summary>
			public int KenticoID
			{
				get
				{
					return mInstance.KenticoID;
				}
				set
				{
					mInstance.KenticoID = value;
				}
			}


			/// <summary>
			/// Name.
			/// </summary>
			public string KenticoName
			{
				get
				{
					return mInstance.KenticoName;
				}
				set
				{
					mInstance.KenticoName = value;
				}
			}
		}

		#endregion


		#region "Constructors"

		/// <summary>
		/// Initializes a new instance of the <see cref="KenticoMvc" /> class.
		/// </summary>
		public KenticoMvc() : base(CLASS_NAME)
		{
			mFields = new KenticoMvcFields(this);
		}

		#endregion
	}
}